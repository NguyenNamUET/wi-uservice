# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class InlineResponse2013(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message=None, target=None):  # noqa: E501
        """InlineResponse2013 - a model defined in OpenAPI

        :param message: The message of this InlineResponse2013.  # noqa: E501
        :type message: str
        :param target: The target of this InlineResponse2013.  # noqa: E501
        :type target: Curve
        """
        self.openapi_types = {
            'message': 'str',
            'target': 'Curve'
        }

        self.attribute_map = {
            'message': 'message',
            'target': 'target'
        }

        self._message = message
        self._target = target

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse2013':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_201_3 of this InlineResponse2013.  # noqa: E501
        :rtype: InlineResponse2013
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message(self):
        """Gets the message of this InlineResponse2013.


        :return: The message of this InlineResponse2013.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this InlineResponse2013.


        :param message: The message of this InlineResponse2013.
        :type message: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")  # noqa: E501

        self._message = message

    @property
    def target(self):
        """Gets the target of this InlineResponse2013.


        :return: The target of this InlineResponse2013.
        :rtype: Curve
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this InlineResponse2013.


        :param target: The target of this InlineResponse2013.
        :type target: Curve
        """
        if target is None:
            raise ValueError("Invalid value for `target`, must not be `None`")  # noqa: E501

        self._target = target
