# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class InlineResponse2014(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, model_id=None, message=None):  # noqa: E501
        """InlineResponse2014 - a model defined in OpenAPI

        :param model_id: The model_id of this InlineResponse2014.  # noqa: E501
        :type model_id: str
        :param message: The message of this InlineResponse2014.  # noqa: E501
        :type message: str
        """
        self.openapi_types = {
            'model_id': 'str',
            'message': 'str'
        }

        self.attribute_map = {
            'model_id': 'model_id',
            'message': 'message'
        }

        self._model_id = model_id
        self._message = message

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse2014':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_201_4 of this InlineResponse2014.  # noqa: E501
        :rtype: InlineResponse2014
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_id(self):
        """Gets the model_id of this InlineResponse2014.


        :return: The model_id of this InlineResponse2014.
        :rtype: str
        """
        return self._model_id

    @model_id.setter
    def model_id(self, model_id):
        """Sets the model_id of this InlineResponse2014.


        :param model_id: The model_id of this InlineResponse2014.
        :type model_id: str
        """
        if model_id is None:
            raise ValueError("Invalid value for `model_id`, must not be `None`")  # noqa: E501

        self._model_id = model_id

    @property
    def message(self):
        """Gets the message of this InlineResponse2014.


        :return: The message of this InlineResponse2014.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this InlineResponse2014.


        :param message: The message of this InlineResponse2014.
        :type message: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")  # noqa: E501

        self._message = message
